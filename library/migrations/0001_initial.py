# Generated by Django 4.2.19 on 2025-02-08 06:06

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_jalali.db.models
import library.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('membership_id', models.CharField(max_length=50, unique=True)),
                ('join_date', models.DateField(default=django.utils.timezone.now)),
                ('member_type', models.CharField(choices=[('student', 'دانشجو'), ('faculty', 'هیئت علمی'), ('staff', 'کارمند'), ('free_member', 'عضو آزاد')], default='student', max_length=50, verbose_name='نوع عضویت')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='ایمیل')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='آدرس')),
                ('father_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام پدر')),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='کد ملی')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('gender', models.CharField(blank=True, choices=[('male', 'مرد'), ('female', 'زن')], max_length=10, null=True, verbose_name='جنسیت')),
                ('student_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره دانشجویی')),
                ('personnel_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره پرسنلی')),
                ('field_of_study', models.CharField(blank=True, max_length=100, null=True, verbose_name='رشته تحصیلی')),
                ('degree', models.CharField(blank=True, max_length=100, null=True, verbose_name='مدرک تحصیلی')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='شغل')),
                ('nationality', models.CharField(default='ایرانی', max_length=100, verbose_name='ملیت')),
                ('university', models.CharField(blank=True, max_length=100, null=True, verbose_name='دانشگاه')),
                ('member_status', models.CharField(choices=[('active', 'فعال'), ('inactive', 'غیرفعال'), ('blocked', 'مسدود'), ('graduated', 'فارغ\u200cالتحصیل')], default='active', max_length=10, verbose_name='وضعیت اعتبار عضو')),
                ('profile_image', models.ImageField(blank=True, default='members/profile_images/default_profile.jpg', null=True, upload_to='members/profile_images/', verbose_name='عکس پروفایل')),
                ('groups', models.ManyToManyField(blank=True, related_name='member_set', to='auth.group')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birth_date', django_jalali.db.models.jDateField(blank=True, null=True)),
                ('death_date', django_jalali.db.models.jDateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveIntegerField(verbose_name='کد شهر')),
                ('name', models.CharField(max_length=100, verbose_name='شهر')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('فارسی', 'فارسی'), ('EN', 'لاتین')], default='فارسی', max_length=6, verbose_name='زبان')),
                ('other_contributors', models.CharField(blank=True, max_length=255, null=True, verbose_name='سایر پدیدآورندگان')),
                ('role', models.CharField(blank=True, choices=[('translator', 'مترجم'), ('گزدآورنده', 'گردآوردنده'), ('editor', 'تدوین'), ('supervisor', 'استاد راهنما'), ('advisor', 'استاد مشاور'), ('thesis_writer', 'پایان\u200cنامه نویس'), ('singer', 'آوازخوان'), ('programmer', 'برنامه نویس'), ('producer', 'تهیه کننده'), ('actor', 'بازیگر'), ('illustrator', 'تصویرگر'), ('photographer', 'عکاس')], max_length=50, null=True, verbose_name='نقش')),
                ('title', models.CharField(max_length=500, verbose_name='عنوان')),
                ('sub_title', models.CharField(blank=True, max_length=500, null=True, verbose_name='عنوان فرعی')),
                ('uniform_title', models.CharField(blank=True, max_length=500, null=True, verbose_name='عنوان قراردادی')),
                ('document_type', models.CharField(choices=[('کتاب', 'کتاب'), ('پایاننامه', 'پایاننامه'), ('thesis_dr', 'رساله'), ('article', 'مقاله'), ('deed', 'اسناد و مدارک'), ('project', 'طرح ها و پروژه ها'), ('report', 'گزارش'), ('etc', 'سایر منابع'), ('multimedia', 'مولتی مدیا')], default='book', max_length=50, verbose_name='نوع مدرک')),
                ('reference_type', models.CharField(choices=[('reference', 'مرجع'), ('non_reference', 'غیرمرجع')], default='non_reference', max_length=20, verbose_name='نوع مرجعیت')),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='سال نشر')),
                ('publication_place', models.CharField(blank=True, max_length=35, null=True, verbose_name='محل نشر')),
                ('publisher', models.CharField(blank=True, max_length=255, null=True, verbose_name='ناشر')),
                ('record_number', models.PositiveIntegerField(unique=True, verbose_name='شماره رکورد')),
                ('document_number', models.PositiveIntegerField(verbose_name='شماره مدرک')),
                ('isbn', models.CharField(blank=True, max_length=25, null=True, verbose_name='شابک')),
                ('pages', models.CharField(blank=True, max_length=255, null=True, verbose_name='تعداد صفحات')),
                ('edition', models.CharField(blank=True, max_length=255, null=True, verbose_name='ویرایش')),
                ('main_entry', models.CharField(blank=True, max_length=255, null=True, verbose_name='سرشناسه')),
                ('added_entry', models.CharField(blank=True, max_length=255, null=True, verbose_name='شناسه افزوده')),
                ('added_entry2', models.CharField(blank=True, max_length=255, null=True, verbose_name='شناسه افزوده')),
                ('added_entry3', models.CharField(blank=True, max_length=255, null=True, verbose_name='شناسه افزوده')),
                ('subject', models.CharField(blank=True, max_length=255, null=True, verbose_name='موضوع')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='یادداشت')),
                ('lcc_classification', models.CharField(blank=True, max_length=100, null=True, verbose_name='رده\u200cبندی کنگره')),
                ('lcc_main_class', models.CharField(blank=True, max_length=100, null=True, verbose_name='رده اصلی کنگره')),
                ('lcc_cutter_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='شماره کاتر')),
                ('nlm_classification', models.CharField(blank=True, max_length=100, null=True, verbose_name='رده پزشکی NLM')),
                ('dewey_classification', models.CharField(blank=True, max_length=100, null=True, verbose_name='رده دیویی')),
                ('tannalgan', models.CharField(blank=True, max_length=100, null=True, verbose_name='تنالگان')),
                ('previous_reg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ثبتهای قبلی')),
                ('cataloger_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='فهرست نویس')),
                ('date_data_entry', django_jalali.db.models.jDateField(auto_now=True, verbose_name='تاریخ ورود داده')),
                ('cover_image', models.ImageField(blank=True, default='documents/covers/default_cover.jpg', null=True, upload_to='documents/covers/', verbose_name='عکس جلد')),
                ('electronic_file', models.FileField(blank=True, null=True, upload_to='documents/files/', verbose_name='فایل الکترونیکی')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('library_id', models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', django_jalali.db.models.jDateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='libraries/')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('city', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='library.city', verbose_name='شهر')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryFloor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_code', models.CharField(max_length=10, verbose_name='کد طبقه')),
                ('floor_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام طبقه')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='library.library', verbose_name='کتابخانه')),
            ],
        ),
        migrations.CreateModel(
            name='LibrarySection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_code', models.CharField(max_length=10, verbose_name='کد بخش')),
                ('section_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام بخش')),
                ('library_floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='library.libraryfloor', verbose_name='طبقه')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveIntegerField(unique=True, verbose_name='کد استان')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='استان')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveIntegerField(unique=True, verbose_name='کد منطقه')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='منطقه')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('reservation_expiry', models.DateTimeField(default=library.models.default_reservation_expiry)),
                ('status', models.CharField(choices=[('active', 'فعال'), ('canceled', 'لغو شده'), ('completed', 'تکمیل شده')], default='active', max_length=10)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.document')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=50, verbose_name='شماره ثبت')),
                ('status', models.CharField(choices=[('available', 'موجود'), ('loaned', 'امانت داده شده'), ('lost', 'گمشده'), ('weeding', 'وجین شده')], default='available', max_length=10, verbose_name='وضعیت مدرک')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('location_code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='کد محل نگهداری')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='documents/qrcodes/', verbose_name='QR کد')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_numbers', to='library.document', verbose_name='مدرک')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.library', verbose_name='کتابخانه')),
                ('library_floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registration_numbers', to='library.libraryfloor', verbose_name='طبقه')),
                ('library_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registration_numbers', to='library.librarysection', verbose_name='بخش')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_date', models.DateField(default=django.utils.timezone.now, verbose_name='تاریخ امانت')),
                ('due_date', models.DateField(default=library.models.default_due_date, verbose_name='تاریخ مهلت بازگشت')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='تاریخ بازگشت')),
                ('is_returned', models.BooleanField(default=False, verbose_name='بازگردانده شده')),
                ('debt', models.IntegerField(default=0, verbose_name='بدهی (تومان)')),
                ('financial_status', models.CharField(choices=[('debtor', 'بدهکار'), ('no_debt', 'عدم بدهی')], default='no_debt', max_length=10, verbose_name='وضعیت مالی')),
                ('status', models.CharField(choices=[('loaned', 'امانت داده شده'), ('returned', 'بازگردانده شده')], default='loaned', max_length=10)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='عضو')),
                ('registration_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library.registrationnumber', verbose_name='شماره ثبت')),
            ],
            options={
                'verbose_name': 'امانت',
                'verbose_name_plural': 'امانات',
            },
        ),
        migrations.CreateModel(
            name='LibraryStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('Librarian', 'کتابدار'), ('Manager', 'مدیر'), ('Assistant', 'دستیار'), ('Other', 'سایر')], default='Librarian', max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='library_staff/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='library.library')),
            ],
            options={
                'verbose_name': 'کارمند کتابخانه',
                'verbose_name_plural': 'کارمندان کتابخانه',
            },
        ),
        migrations.CreateModel(
            name='LibraryPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='library_photos/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libphotos', to='library.library')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='library.library')),
            ],
        ),
        migrations.AddField(
            model_name='library',
            name='province',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='library.province', verbose_name='استان'),
        ),
        migrations.AddField(
            model_name='library',
            name='region',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='library.region', verbose_name='منطقه'),
        ),
        migrations.CreateModel(
            name='DocumentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('full', 'دسترسی کامل'), ('partial', 'دسترسی جزئی'), ('restricted', 'محدود')], default='restricted', max_length=20, verbose_name='نوع دسترسی')),
                ('preview_pages', models.PositiveIntegerField(blank=True, help_text='تعداد صفحاتی که برای پیش\u200cنمایش قابل دسترسی است (در صورت محدود بودن)', null=True, verbose_name='تعداد صفحات قابل مشاهده')),
                ('is_for_sale', models.BooleanField(default=False, verbose_name='قابل فروش')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='قیمت فروش فایل در صورت قابل فروش بودن', max_digits=10, null=True, verbose_name='قیمت')),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='accesspolicy', to='library.document')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='access_policy',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_document', to='library.documentaccess'),
        ),
        migrations.AddField(
            model_name='document',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.author'),
        ),
        migrations.AddField(
            model_name='document',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='library.library', verbose_name='کتابخانه'),
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cities', to='library.province', verbose_name='استان'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cities', to='library.region', verbose_name='منطقه'),
        ),
        migrations.AddField(
            model_name='member',
            name='library',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library.library'),
        ),
        migrations.AddField(
            model_name='member',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='member_permissions_set', to='auth.permission'),
        ),
        migrations.AddConstraint(
            model_name='registrationnumber',
            constraint=models.UniqueConstraint(fields=('number', 'library'), name='unique_registration_number_in_library'),
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('code', 'province', 'region')},
        ),
    ]
